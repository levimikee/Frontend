{"version":3,"sources":["redux/auth/actions.js","pages/Logout.jsx"],"names":["login","loginAdminData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","data","authValue","wrap","_context","prev","next","type","actionTypes","payload","loading","console","log","authService","sent","success","current","result","admin","isLoggedIn","storePersist","set","history","push","stop","_x","apply","arguments","logout","_ref2","_callee2","_context2","_x2","Logout","useDispatch","useEffect","_asyncLogout","logoutAction","asyncLogout","_jsx","_Fragment"],"mappings":"0RAKaA,EAAQ,SAACC,GAAc,sBAAAC,EAAAC,YAAAC,cAAAC,MAAK,SAAAC,EAAOC,GAAQ,IAAAC,EAAAC,EAAA,OAAAL,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAKb,OAJzCN,EAAS,CACPO,KAAMC,IACNC,QAAS,CAAEC,SAAS,KAEtBC,QAAQC,IAAI,aAAalB,GAAgBU,EAAAE,KAAA,EACtBO,IAAkBnB,GAAgB,KAAD,GAE/B,KAFfO,EAAIG,EAAAU,MAEDC,SACDb,EAAY,CAChBc,QAASf,EAAKgB,OAAOC,MACrBR,SAAS,EACTS,YAAY,GAEdC,IAAaC,IAAI,OAAQnB,GACzBF,EAAS,CACPO,KAAMC,IACNC,QAASR,EAAKgB,OAAOC,QAEvBI,IAAQC,KAAK,MAEbvB,EAAS,CACPO,KAAMC,IACNC,QAASR,IAEZ,wBAAAG,EAAAoB,OAAA,GAAAzB,EAAA,KACF,gBAAA0B,GAAA,OAAA9B,EAAA+B,MAAA,KAAAC,UAAA,EA1BmC,EA0BnC,EAEYC,EAAS,WAAH,sBAAAC,EAAAjC,YAAAC,cAAAC,MAAS,SAAAgC,EAAO9B,GAAQ,OAAAH,cAAAM,MAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,OACzCO,MACAb,EAAS,CACPO,KAAMC,MAERc,IAAQC,KAAK,UAAU,wBAAAQ,EAAAP,OAAA,GAAAM,EAAA,KACxB,gBAAAE,GAAA,OAAAH,EAAAH,MAAA,KAAAC,UAAA,EANkB,EAMlB,C,6FCfcM,UAnBA,WACb,IAAMjC,EAAWkC,cAgBjB,OAPAC,qBAAU,WACkB,SAAAC,IAEzB,OAFyBA,EAAAxC,YAAAC,cAAAC,MAA1B,SAAAC,IAAA,OAAAF,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQN,EAASqC,eAAgB,KAAD,mBAAAjC,EAAAoB,OAAA,GAAAzB,EAAA,MAC/B2B,MAAA,KAAAC,UAAA,EAHc,WACWS,EAAAV,MAAC,KAADC,UAAA,CAG1BW,EACF,GAAG,IAEIC,cAAAC,WAAA,GACT,C","file":"static/js/LogoutPage.ad36cb19.chunk.js","sourcesContent":["import * as actionTypes from \"./types\";\nimport * as authService from \"@/auth\";\nimport storePersist from \"@/redux/storePersist\";\nimport history from \"@/utils/history\";\n\nexport const login = (loginAdminData) => async (dispatch) => {\n  dispatch({\n    type: actionTypes.LOADING_REQUEST,\n    payload: { loading: true },\n  });\n  console.log(\"LOGIN_DATA\",loginAdminData);\n  const data = await authService.login(loginAdminData);\n\n  if (data.success === true) {\n    const authValue = {\n      current: data.result.admin,\n      loading: false,\n      isLoggedIn: true,\n    };\n    storePersist.set(\"auth\", authValue);\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: data.result.admin,\n    });\n    history.push(\"/\");\n  } else {\n    dispatch({\n      type: actionTypes.FAILED_REQUEST,\n      payload: data,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch) => {\n  authService.logout();\n  dispatch({\n    type: actionTypes.LOGOUT_SUCCESS,\n  });\n  history.push(\"/login\");\n};\n","import React, { useEffect, useCallback } from \"react\";\nimport { Button, Result } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { logout as logoutAction } from \"@/redux/auth/actions\";\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  // const callbackLogout = useCallback(async () => {\n  //   await dispatch(logoutAction());\n  // }, []);\n\n  // useEffect(() => {\n  //   callbackLogout();\n  // }, []);\n\n  useEffect(() => {\n    async function asyncLogout() {\n      await dispatch(logoutAction());\n    }\n    asyncLogout();\n  }, []);\n\n  return <></>;\n};\nexport default Logout;\n"],"sourceRoot":""}