{"version":3,"sources":["redux/auth/selectors.js","auth/cookie.js","auth/auth.service.js","request/errorHandler.js","request/successHandler.js","router/PublicRoute.jsx","components/PageLoader/index.jsx","router/AuthRouter.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","layout/Navigation/index.jsx","router/index.jsx","redux/auth/reducer.js","redux/crud/reducer.js","redux/search/reducer.js","redux/search/types.js","redux/rootReducer.js","redux/store.js","app/index.jsx","hooks/useNetwork/index.jsx","serviceWorker.jsx","index.jsx","config/serverApiConfig.js","redux/crud/types.js","redux/auth/types.js","redux/storePersist.js","request/codeMessage.js","auth/index.js","utils/history.jsx"],"names":["authSelect","state","auth","selectAuth","createSelector","selectCurrentAdmin","current","isLoggedIn","getCookie","cookieName","result","window","localStorage","getItem","JSON","parse","login","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","loginAdminData","response","wrap","_context","prev","next","axios","post","API_BASE_URL","concat","Date","getTime","sent","token","set","data","abrupt","successHandler","t0","errorHandler","stop","_x","apply","arguments","logout","_ref2","_callee2","headersInstance","axiosInstance","_context2","_defineProperty","ACCESS_TOKEN_NAME","create","baseURL","timeout","headers","_objectSpread","remove","storePersist","clear","location","href","get","cookieValue","setItem","stringify","removeItem","error","emptyResult","length","undefined","status","errorText","message","codeMessage","notification","config","duration","description","jwtExpired","history","push","success","url","PublicRoute","Component","component","rest","_objectWithoutProperties","_excluded","_jsx","Route","render","props","authService","Redirect","to","motion","div","initial","x","animate","exit","scale","children","PageLoader","className","Spin","size","Login","lazy","NotFound","AuthRouter","useLocation","Suspense","fallback","AnimatePresence","exitBeforeEnter","_jsxs","Switch","path","exact","pathname","PrivateRoute","type","damping","stiffness","transition","y","opacity","Admin","Customer","SelectCustomer","Lead","Product","Logout","UploadFile","AppRouter","console","log","Sider","Layout","Menu","SubMenu","Navigation","_useState","useState","_useState2","_slicedToArray","collapsed","setCollapsed","isRootUser","useSelector","_Fragment","collapsible","onCollapse","style","zIndex","theme","defaultSelectedKeys","mode","onClick","e","key","Item","icon","DashboardOutlined","Link","UserOutlined","LogoutOutlined","Router","useEffect","minHeight","INITIAL_STATE","loading","authReducer","action","actionTypes","payload","INITIAL_KEY_STATE","isLoading","isSuccess","list","items","pagination","pageSize","total","update","delete","read","search","crudReducer","keyState","INITIAL_REF_STATE","selected","searchReducer","_action$payload","_action$keyState","newState","map","refKey","appReducer","combineReducers","crud","rootReducer","middleware","createLogger","thunk","configStore","applyMiddleware","_toConsumableArray","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","initialState","store","createStore","App","navigator","onLine","isOnline","setNetwork","useNetwork","RouterHistory","Provider","Result","title","subTitle","extra","Button","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","process","BACKEND_BASE_URL","RESET_STATE","CURRENT_ITEM","REQUEST_LOADING","REQUEST_SUCCESS","REQUEST_FAILED","CURRENT_ACTION","RESET_ACTION","FAILED_REQUEST","LOADING_REQUEST","LOGIN_SUCCESS","LOGOUT_SUCCESS","getAll","createBrowserHistory"],"mappings":"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","file":"static/js/main.e0dc213b.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\nconst authSelect = (state) => state.auth;\n\nexport const selectAuth = createSelector([authSelect], (auth) => auth);\nexport const selectCurrentAdmin = createSelector(\n  [authSelect],\n  (auth) => auth.current\n);\n\nexport const isLoggedIn = createSelector(\n  [authSelect],\n  (auth) => auth.isLoggedIn\n);\n","// export function getCookie(cookieName) {\n//   let name = cookieName + \"=\";\n//   let ca = document.cookie.split(\";\");\n//   for (let i = 0; i < ca.length; i++) {\n//     let c = ca[i];\n//     while (c.charAt(0)===\" \") {\n//       c = c.substring(1);\n//     }\n//     if (c.indexOf(name)===0) {\n//       return c.substring(name.length, c.length);\n//     }\n//   }\n//   return \"\";\n// }\n\n// export function setCookie(cookieName, cookieValue, expireDays = 1) {\n//   let d = new Date();\n//   d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n//   let expires = \"expires=\" + d.toUTCString();\n//   document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\n// }\n\n// export function deleteCookie(cookieName) {\n//   document.cookie = cookieName + \"=; Max-Age=-99999999; \";\n//   return true;\n// }\n\nexport function setCookie(cookieName, cookieValue) {\n  window.localStorage.setItem(cookieName, JSON.stringify(cookieValue));\n}\nexport function getCookie(cookieName) {\n  const result = window.localStorage.getItem(cookieName);\n  return JSON.parse(result);\n}\nexport function deleteCookie(cookieName) {\n  window.localStorage.removeItem(cookieName);\n  return true;\n}\n","import { API_BASE_URL, ACCESS_TOKEN_NAME } from \"@/config/serverApiConfig\";\n\nimport axios from \"axios\";\nimport errorHandler from \"@/request/errorHandler\";\nimport successHandler from \"@/request/successHandler\";\nimport storePersist from \"@/redux/storePersist\";\nimport { getCookie, setCookie, deleteCookie } from \"./cookie\";\n\n\n\n\n\nexport const login = async (loginAdminData) => {\n  try {\n    const response = await axios.post(\n      API_BASE_URL + `login?timestamp=${new Date().getTime()}`,\n      loginAdminData\n    );\n    token.set(response.data.result.token);\n    return successHandler(response);\n  } catch (error) {\n    return errorHandler(error);\n  }\n};\n\nexport const logout = async () => {\n  const headersInstance = { [ACCESS_TOKEN_NAME]: getCookie(ACCESS_TOKEN_NAME) };\n  \n  const axiosInstance = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 30000,\n    headers: {\n      ...headersInstance,\n    },\n  }); \n  try {\n    await axiosInstance.post(\n      API_BASE_URL + \"logout\",\n      {}\n    );\n  } catch (error) {\n  }\n  token.remove();\n  storePersist.clear();\n  // redirect to login forcing a reload\n  window.location.href = \"/\"; \n};\n\nexport const token = {\n  get: () => {\n    return getCookie(ACCESS_TOKEN_NAME);\n  },\n  set: (token) => {\n    return setCookie(ACCESS_TOKEN_NAME, token);\n  },\n  remove: () => {\n    return deleteCookie(ACCESS_TOKEN_NAME);\n  },\n};\n","import { notification } from \"antd\";\nimport history from \"@/utils/history\";\nimport codeMessage from \"./codeMessage\";\n\nconst errorHandler = (error, emptyResult = null) => {\n  const { response } = error;\n\n  if (!response) {\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.error({\n    //   message: \"No internet connection\",\n    //   description: \"Cannot connect to the server, Check your internet network\",\n    // });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"Cannot connect to the server, Check your internet network\",\n    };\n  } else if (response && response.status) {\n    const message = response.data && response.data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n    if (error.response.data.jwtExpired) {\n      history.push(\"/logout\");\n    }\n    return response.data;\n  } else {\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: \"Unknown Error\",\n      description: \"An unknown error occurred in the app, please try again. \",\n    });\n    return {\n      success: false,\n      result: emptyResult,\n      message: \"An unknown error occurred in the app, please try again. \",\n    };\n  }\n};\n\nexport default errorHandler;\n","import { notification } from \"antd\";\n\nimport codeMessage from \"./codeMessage\";\n\nconst successHandler = (response, typeNotification = {}) => {\n  if (!response.data.result) {\n    response = {\n      ...response,\n      status: 404,\n      url: null,\n      data: {\n        success: false,\n        result: null,\n      },\n    };\n  }\n  const { data } = response;\n  if (data.success === false) {\n    const message = data && data.message;\n    const errorText = message || codeMessage[response.status];\n    const { status } = response;\n    notification.config({\n      duration: 20,\n    });\n    notification.error({\n      message: `Request error ${status}`,\n      description: errorText,\n    });\n  } else {\n    const message = data && data.message;\n    const successText = message || codeMessage[response.status];\n    const { status } = response;\n    // notification.config({\n    //   duration: 20,\n    // });\n    // notification.success({\n    //   message: `Request success`,\n    //   description: successText,\n    // });\n  }\n\n  return data;\n};\n\nexport default successHandler;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authService from \"@/auth\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <motion.div\n            initial={{ x: 200 }}\n            animate={{ x: 0 }}\n            exit={{ scale: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nconst PageLoader = () => {\n  return (\n    <div className=\"center\">\n      <Spin size=\"large\" />\n    </div>\n  );\n};\nexport default PageLoader;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Login = lazy(() =>\n  import(/*webpackChunkName:'LoginPage'*/ \"@/pages/Login\")\n);\n\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nexport default function AuthRouter() {\n  const location = useLocation();\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PublicRoute\n            path=\"/\"\n            component={Login}\n            render={() => <Redirect to=\"/login\" />}\n          />\n          <PublicRoute component={Login} path=\"/login\" exact />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport * as authService from \"@/auth\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    // const admin = useSelector(state => state);\n\n  const config = {\n    type: \"spring\",\n    damping: 20,\n    stiffness: 100,\n  };\n  return (\n    // Show the component only when the admin is logged in\n    // Otherwise, redirect the admin to /signin page\n\n    <Route\n      {...rest}\n      render={(props) =>\n        authService.token.get() ? (\n          <motion.div\n            transition={config}\n            initial={{ y: 20, opacity: 0 }}\n            animate={{ y: 0, opacity: 1 }}\n            exit={{ y: -20, opacity: 0 }}\n          >\n            <Component {...props} />\n          </motion.div>\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { lazy, Suspense } from \"react\";\nimport { Redirect, Route, Switch, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport PublicRoute from \"./PublicRoute\";\nimport PageLoader from \"@/components/PageLoader\";\n\nconst Dashboard = lazy(() =>\n  import(/*webpackChunkName:'DashboardPage'*/ \"@/pages/Dashboard\")\n);\nconst Admin = lazy(() =>\n  import(/*webpackChunkName:'AdminPage'*/ \"@/pages/Admin\")\n);\n\nconst Customer = lazy(() =>\n  import(/*webpackChunkName:'CustomerPage'*/ \"@/pages/Customer\")\n);\n\nconst SelectCustomer = lazy(() =>\n  import(/*webpackChunkName:'SelectCustomerPage'*/ \"@/pages/SelectCustomer\")\n);\n\nconst Lead = lazy(() => import(/*webpackChunkName:'LeadPage'*/ \"@/pages/Lead\"));\nconst Product = lazy(() =>\n  import(/*webpackChunkName:'ProductPage'*/ \"@/pages/Product\")\n);\n\nconst Logout = lazy(() =>\n  import(/*webpackChunkName:'LogoutPage'*/ \"@/pages/Logout\")\n);\nconst NotFound = lazy(() =>\n  import(/*webpackChunkName:'NotFoundPage'*/ \"@/pages/NotFound\")\n);\n\nconst UploadFile = lazy(() =>\n  import(/*webpackChunkName:'Upl;oadFilePage'*/ \"@/pages/UploadFile\")\n);\n\nexport default function AppRouter() {\n  const location = useLocation();\n  console.log('AppRouter here location', location);\n  return (\n    <Suspense fallback={<PageLoader />}>\n      <AnimatePresence exitBeforeEnter initial={false}>\n        <Switch location={location} key={location.pathname}>\n          <PrivateRoute\n            path=\"/\"\n            component={UploadFile}\n            render={() => <Redirect to=\"/upload-file\" />}\n            exact\n          />\n          <PrivateRoute\n            path=\"/upload-file\"\n            component={UploadFile}\n            exact\n          />\n          <PrivateRoute component={Customer} path=\"/customer\" exact />\n          <PrivateRoute\n            component={SelectCustomer}\n            path=\"/selectcustomer\"\n            exact\n          />\n          <PrivateRoute component={Lead} path=\"/lead\" exact />\n          <PrivateRoute component={Product} path=\"/product\" exact />\n          <PrivateRoute component={Admin} path=\"/admin\" exact />\n\n          <PrivateRoute component={Logout} path=\"/logout\" exact />\n          <PublicRoute path=\"/login\" render={() => <Redirect to=\"/\" />} />\n          <Route\n            path=\"*\"\n            component={NotFound}\n            render={() => <Redirect to=\"/notfound\" />}\n          />\n        </Switch>\n      </AnimatePresence>\n    </Suspense>\n  );\n}\n","import React, { useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { Layout, Menu } from \"antd\";\nimport { logout } from \"../../auth/auth.service\";\nimport {\n  DashboardOutlined,\n  LogoutOutlined,\n  UserOutlined\n} from \"@ant-design/icons\";\nimport { useSelector, useStore } from \"react-redux\";\nimport { selectCurrentAdmin } from \"@/redux/auth/selectors\";\nconst { Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction Navigation() {\n  const [collapsed, setCollapsed] = useState(false);\n  const {isRootUser}  = useSelector(selectCurrentAdmin);\n   \n  const onCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n\n\n  const handleMenuClick = (e) => {\n    if (e.key === \"3\") {\n      logout();\n    }\n  };\n\n  return (\n    <>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n        style={{\n          zIndex: 1000,\n        }}\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\" onClick={handleMenuClick}>\n          <Menu.Item key=\"1\" icon={<DashboardOutlined />}>\n            <Link to=\"/upload-file\" />\n            Upload\n          </Menu.Item>\n         {isRootUser &&\n          <Menu.Item key=\"2\" icon={<UserOutlined />}>\n            <Link to=\"/admin\" />\n            User management\n          </Menu.Item>}\n          <Menu.Item key=\"3\" icon={<LogoutOutlined />}>\n              Logout\n          </Menu.Item>\n\n        </Menu>\n      </Sider>\n    </>\n  );\n}\nexport default Navigation;\n","// export { default as AuthRouter } from \"./AuthRouter\";\n// export { default as AppRouter } from \"./AppRouter\";\nimport React, { useEffect } from \"react\";\n\nimport AuthRouter from \"./AuthRouter\";\nimport AppRouter from \"./AppRouter\";\n\nimport { Layout } from \"antd\";\nimport Navigation from \"@/layout/Navigation\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectAuth } from \"@/redux/auth/selectors\";\n\nexport default function Router() {\n  const { isLoggedIn } = useSelector(selectAuth);\n\n  useEffect(() => {\n    console.log(\"isLoggedIn : \", isLoggedIn);\n  }, [isLoggedIn]);\n\n  if (isLoggedIn === false)\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <AuthRouter />\n      </Layout>\n    );\n  else\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Navigation />\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <AppRouter />\n        </Layout>\n      </Layout>\n    );\n}\n\n// export default App;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_STATE = {\n  current: {},\n  loading: false,\n  isLoggedIn: false,\n};\n\nconst authReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.LOADING_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.FAILED_REQUEST:\n      return INITIAL_STATE;\n\n    case actionTypes.LOGIN_SUCCESS:\n      return {\n        current: action.payload,\n        loading: false,\n        isLoggedIn: true,\n      };\n    case actionTypes.LOGOUT_SUCCESS:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_KEY_STATE = {\n  result: null,\n  current: null,\n  isLoading: false,\n  isSuccess: false,\n};\n\nconst INITIAL_STATE = {\n  current: {\n    result: null,\n  },\n  list: {\n    result: {\n      items: [],\n      pagination: {\n        current: 1,\n        pageSize: 10,\n        total: 1,\n      },\n    },\n    isLoading: false,\n    isSuccess: false,\n  },\n  create: INITIAL_KEY_STATE,\n  update: INITIAL_KEY_STATE,\n  delete: INITIAL_KEY_STATE,\n  read: INITIAL_KEY_STATE,\n  search: { ...INITIAL_KEY_STATE, result: [] },\n};\n\nconst crudReducer = (state = INITIAL_STATE, action) => {\n  const { payload, keyState } = action;\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n    case actionTypes.CURRENT_ITEM:\n      return {\n        ...state,\n        current: {\n          result: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          isLoading: false,\n          isSuccess: false,\n        },\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          result: payload,\n          isLoading: false,\n          isSuccess: true,\n        },\n      };\n    case actionTypes.CURRENT_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_KEY_STATE,\n          current: payload,\n        },\n      };\n    case actionTypes.RESET_ACTION:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_STATE[keyState],\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default crudReducer;\n","import * as actionTypes from \"./types\";\n\nconst INITIAL_REF_STATE = {\n  result: [],\n  selected: null,\n  isLoading: false,\n  isSuccess: false,\n};\nconst INITIAL_STATE = {};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  const { payload = null, keyState = null } = action;\n  switch (action.type) {\n    case actionTypes.INIT_STATE: {\n      let newState = {};\n      payload.map((refKey) => (newState[refKey] = INITIAL_REF_STATE));\n      return newState;\n    }\n\n    case actionTypes.RESET_STATE:\n      return INITIAL_STATE;\n\n    case actionTypes.RESET_REF:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n\n    case actionTypes.CURRENT_SELECTED:\n      return {\n        ...state,\n        [keyState]: {\n          ...state[keyState],\n          selected: payload,\n        },\n      };\n    case actionTypes.REQUEST_LOADING:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          isLoading: true,\n        },\n      };\n    case actionTypes.REQUEST_FAILED:\n      return {\n        ...state,\n        [keyState]: INITIAL_REF_STATE,\n      };\n    case actionTypes.REQUEST_SUCCESS:\n      return {\n        ...state,\n        [keyState]: {\n          ...INITIAL_REF_STATE,\n          result: payload,\n          isSuccess: true,\n        },\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","export const INIT_STATE = \"SEARCH_INIT_STATE\";\nexport const RESET_STATE = \"SEARCH_RESET_STATE\";\nexport const CURRENT_SELECTED = \"SEARCH_CURRENT_SELECTED\";\n\nexport const REQUEST_LOADING = \"SEARCH_REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"SEARCH_REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"SEARCH_REQUEST_FAILED\";\n\nexport const RESET_REF = \"SEARCH_RESET_REF\";\n","import { combineReducers } from \"redux\";\n\nimport { reducer as authReducer } from \"./auth\";\nimport { reducer as crudReducer } from \"./crud\";\nimport { reducer as searchReducer } from \"./search\";\n\nimport * as actionTypes from \"./auth/types\";\n\n// Combine all reducers.\n\nconst appReducer = combineReducers({\n  auth: authReducer,\n  crud: crudReducer,\n  search: searchReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === actionTypes.LOGOUT_SUCCESS) {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nimport rootReducer from \"./rootReducer\";\nimport storePersist from \"./storePersist\";\n\nconst logger = createLogger();\nlet middleware = [thunk];\n\nlet configStore = applyMiddleware(...middleware);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, logger];\n  configStore = composeEnhancers(applyMiddleware(...middleware));\n}\n\nconst initialState = storePersist.get(\"auth\")\n  ? { auth: storePersist.get(\"auth\") }\n  : {};\n\nconst store = createStore(rootReducer, initialState, configStore);\n\nexport default store;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { Router as RouterHistory } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport Router from \"@/router\";\nimport history from \"@/utils/history\";\nimport store from \"@/redux/store\";\n\nimport { Button, Result } from \"antd\";\n\nimport useNetwork from \"@/hooks/useNetwork\";\n\nfunction App() {\n  const { isOnline: isNetwork } = useNetwork();\n\n  if (!isNetwork)\n    return (\n      <>\n        <Result\n          status=\"404\"\n          title=\"No Internet Connection\"\n          subTitle=\"Check your Internet Connection or your network.\"\n          extra={\n            <Button href=\"/\" type=\"primary\">\n              Try Again\n            </Button>\n          }\n        />\n      </>\n    );\n  else {\n    return (\n      <RouterHistory history={history}>\n        <Provider store={store}>\n          <Router />\n        </Provider>\n      </RouterHistory>\n    );\n  }\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\n\nexport default function useNetwork() {\n  const [isOnline, setNetwork] = useState(window.navigator.onLine);\n  useEffect(() => {\n    setNetwork(window.navigator.onLine);\n  }, [window.navigator.onLine]);\n  return { isOnline };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n// import \"./index.css\";\nimport App from \"./app\"\nimport \"./style/app.less\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","console.log(\n  \"process env REACT_APP_DEV_REMOTE\",\n  process.env.REACT_APP_DEV_REMOTE\n)\n\nexport const BACKEND_BASE_URL = \nprocess.env.NODE_ENV == \"production\" ||\nprocess.env.REACT_APP_DEV_REMOTE == \"remote\"\n  ? \"http://localhost:8888/\"\n  : \"http://localhost:8888/\"\n\nexport const API_BASE_URL = BACKEND_BASE_URL + \"api/\";\n \n// export const API_BASE_URL = \"https://wild-puce-reindeer-sari.cyclic.app/api/\";\nexport const ACCESS_TOKEN_NAME = \"x-auth-token\"\n","export const RESET_STATE = \"CRUD_RESET_STATE\";\nexport const CURRENT_ITEM = \"CRUD_CURRENT_ITEM\";\n\nexport const REQUEST_LOADING = \"CRUD_REQUEST_LOADING\";\nexport const REQUEST_SUCCESS = \"CRUD_REQUEST_SUCCESS\";\nexport const REQUEST_FAILED = \"CRUD_REQUEST_FAILED\";\n\nexport const CURRENT_ACTION = \"CRUD_CURRENT_ACTION\";\nexport const RESET_ACTION = \"CRUD_RESET_ACTION\";\n","export const FAILED_REQUEST = \"AUTH_FAILED_REQUEST\";\nexport const LOADING_REQUEST = \"AUTH_LOADING_REQUEST\";\n\nexport const LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\";\n\nexport const LOGOUT_SUCCESS = \"AUTH_LOGOUT_SUCCESS\";\n","export const storePersist = {\n  set: (key, state) => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  },\n  get: (key) => {\n    const result = window.localStorage.getItem(key);\n    return JSON.parse(result);\n  },\n  remove: (key) => {\n    window.localStorage.removeItem(key);\n  },\n  getAll: () => {\n    return window.localStorage;\n  },\n  clear: () => {\n    window.localStorage.clear();\n  },\n};\n\nexport default storePersist;\n","const codeMessage = {\n  200: \"The server successfully returned the requested data. \",\n  201: \"Create or modify data successfully. \",\n  202: \"A request has entered the background queue (asynchronous task). \",\n  204: \"Delete data successfully. \",\n  400: \"There was an error in the request sent, and the server did not create or modify data. \",\n  401: \"The admin does not have permission please try to login again. \",\n  403: \"The admin is authorized, but access is forbidden. \",\n  404: \"The request sent is for a record that does not exist, and the server is not operating. \",\n  406: \"The requested format is not available. \",\n  410: \"The requested resource has been permanently deleted and will no longer be available. \",\n  422: \"When creating an object, a validation error occurred. \",\n  500: \"An error occurred in the server, please check the server. \",\n  502: \"Gateway error. \",\n  503: \"The service is unavailable, the server is temporarily overloaded or maintained. \",\n  504: \"The gateway has timed out. \",\n};\n\nexport default codeMessage;\n","export * from \"./auth.service\";\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n"],"sourceRoot":""}